# This file is deprecated as per GLEP 56 in favor of metadata.xml.
# Please add your descriptions to your package's metadata.xml ONLY.
# * generated automatically using pmaint *

cross-armv7a-hardfloat-linux-gnueabi/binutils:default-gold - Set ld to point to ld.gold instead of ld.bfd
cross-armv7a-hardfloat-linux-gnueabi/binutils:gold - Build ld.gold linker
cross-armv7a-hardfloat-linux-gnueabi/binutils:multitarget - Adds support to binutils for cross compiling (does not work with gas)
cross-armv7a-hardfloat-linux-gnueabi/binutils:plugins - Enable plugin support in tools
cross-armv7a-hardfloat-linux-gnueabi/gcc:awt - Useful only when building GCJ, this enables Abstract Window Toolkit (AWT) peer support on top of GTK+
cross-armv7a-hardfloat-linux-gnueabi/gcc:boundschecking - Add the bounds checking patch by Haj Ten Brugge, this will DISABLE the hardened PIE+SSP patches
cross-armv7a-hardfloat-linux-gnueabi/gcc:cilk - Support the Cilk Plus language (C/C++ based languages for parallel programming)
cross-armv7a-hardfloat-linux-gnueabi/gcc:d - Enable support for the D programming language
cross-armv7a-hardfloat-linux-gnueabi/gcc:fixed-point - Enable fixed-point arithmetic support for MIPS targets in gcc (Warning: significantly increases compile time!)
cross-armv7a-hardfloat-linux-gnueabi/gcc:go - Build the GCC Go language frontend.
cross-armv7a-hardfloat-linux-gnueabi/gcc:graphite - Add support for the framework for loop optimizations based on a polyhedral intermediate representation
cross-armv7a-hardfloat-linux-gnueabi/gcc:jit - Enable libgccjit so other applications can embed gcc for Just-In-Time compilation. This will slow down the compiler a bit as it forces all of the toolchain to be shared libs.
cross-armv7a-hardfloat-linux-gnueabi/gcc:libssp - Build SSP support into a dedicated library rather than use the code in the C library (DO NOT ENABLE THIS IF YOU DON'T KNOW WHAT IT DOES)
cross-armv7a-hardfloat-linux-gnueabi/gcc:mpx - Enable support for Intel Memory Protection Extensions (MPX)
cross-armv7a-hardfloat-linux-gnueabi/gcc:mudflap - Add support for mudflap, a pointer use checking library
cross-armv7a-hardfloat-linux-gnueabi/gcc:nopie - Disable PIE support (NOT FOR GENERAL USE)
cross-armv7a-hardfloat-linux-gnueabi/gcc:nossp - Disable SSP support (NOT FOR GENERAL USE)
cross-armv7a-hardfloat-linux-gnueabi/gcc:objc - Build support for the Objective C code language
cross-armv7a-hardfloat-linux-gnueabi/gcc:objc++ - Build support for the Objective C++ language
cross-armv7a-hardfloat-linux-gnueabi/gcc:objc-gc - Build support for the Objective C code language Garbage Collector
cross-armv7a-hardfloat-linux-gnueabi/gcc:pgo - Build GCC using Profile Guided Optimization (PGO)
cross-armv7a-hardfloat-linux-gnueabi/gcc:regression-test - Run the testsuite and install the results (requires FEATURES=test)
cross-armv7a-hardfloat-linux-gnueabi/gcc:sanitize - Build support for various sanitizer functions (ASAN/TSAN/etc...)
cross-armv7a-hardfloat-linux-gnueabi/gcc:ssp - Build packages with stack smashing protector on by default
cross-armv7a-hardfloat-linux-gnueabi/gcc:systemtap - enable systemtap static probe points
cross-armv7a-hardfloat-linux-gnueabi/gcc:vtv - Build support for virtual table verification (a C++ hardening feature)
cross-armv7a-hardfloat-linux-gnueabi/gdb:client - Install the main "gdb" program (most people want this)
cross-armv7a-hardfloat-linux-gnueabi/gdb:lzma - Support lzma compression in ELF debug info
cross-armv7a-hardfloat-linux-gnueabi/gdb:multitarget - Support all known targets in one gdb binary
cross-armv7a-hardfloat-linux-gnueabi/gdb:python - Enable support for the new internal scripting language, as well as extended pretty printers
cross-armv7a-hardfloat-linux-gnueabi/gdb:server - Install the "gdbserver" program (useful for embedded/remote targets)
cross-armv7a-hardfloat-linux-gnueabi/gdb:xml - Support parsing XML data files needed (at least) for cpu features, memory maps, and syscall tracing
cross-armv7a-hardfloat-linux-gnueabi/glibc:cet - Enable Intel Control-flow Enforcement Technology (needs binutils 2.29 and gcc 8)
cross-armv7a-hardfloat-linux-gnueabi/glibc:compile-locales - build *all* locales in src_install; this is generally meant for stage building only as it ignores /etc/locale.gen file and can be pretty slow
cross-armv7a-hardfloat-linux-gnueabi/glibc:debug - When USE=hardened, allow fortify/stack violations to dump core (SIGABRT) and not kill self (SIGKILL)
cross-armv7a-hardfloat-linux-gnueabi/glibc:gd - build memusage and memusagestat tools
cross-armv7a-hardfloat-linux-gnueabi/glibc:multiarch - enable optimizations for multiple CPU architectures (detected at runtime)
cross-armv7a-hardfloat-linux-gnueabi/glibc:nscd - Build, and enable support for, the Name Service Cache Daemon
cross-armv7a-hardfloat-linux-gnueabi/glibc:rpc - Enable obsolete RPC/NIS layers
cross-armv7a-hardfloat-linux-gnueabi/glibc:suid - Make internal pt_chown helper setuid -- not needed if using Linux and have /dev/pts mounted with gid=5
cross-armv7a-hardfloat-linux-gnueabi/glibc:systemtap - enable systemtap static probe points
cross-armv7a-softfloat-linux-gnueabi/binutils:default-gold - Set ld to point to ld.gold instead of ld.bfd
cross-armv7a-softfloat-linux-gnueabi/binutils:gold - Build ld.gold linker
cross-armv7a-softfloat-linux-gnueabi/binutils:multitarget - Adds support to binutils for cross compiling (does not work with gas)
cross-armv7a-softfloat-linux-gnueabi/binutils:plugins - Enable plugin support in tools
cross-armv7a-softfloat-linux-gnueabi/gcc:awt - Useful only when building GCJ, this enables Abstract Window Toolkit (AWT) peer support on top of GTK+
cross-armv7a-softfloat-linux-gnueabi/gcc:boundschecking - Add the bounds checking patch by Haj Ten Brugge, this will DISABLE the hardened PIE+SSP patches
cross-armv7a-softfloat-linux-gnueabi/gcc:cilk - Support the Cilk Plus language (C/C++ based languages for parallel programming)
cross-armv7a-softfloat-linux-gnueabi/gcc:d - Enable support for the D programming language
cross-armv7a-softfloat-linux-gnueabi/gcc:fixed-point - Enable fixed-point arithmetic support for MIPS targets in gcc (Warning: significantly increases compile time!)
cross-armv7a-softfloat-linux-gnueabi/gcc:go - Build the GCC Go language frontend.
cross-armv7a-softfloat-linux-gnueabi/gcc:graphite - Add support for the framework for loop optimizations based on a polyhedral intermediate representation
cross-armv7a-softfloat-linux-gnueabi/gcc:jit - Enable libgccjit so other applications can embed gcc for Just-In-Time compilation. This will slow down the compiler a bit as it forces all of the toolchain to be shared libs.
cross-armv7a-softfloat-linux-gnueabi/gcc:libssp - Build SSP support into a dedicated library rather than use the code in the C library (DO NOT ENABLE THIS IF YOU DON'T KNOW WHAT IT DOES)
cross-armv7a-softfloat-linux-gnueabi/gcc:mpx - Enable support for Intel Memory Protection Extensions (MPX)
cross-armv7a-softfloat-linux-gnueabi/gcc:mudflap - Add support for mudflap, a pointer use checking library
cross-armv7a-softfloat-linux-gnueabi/gcc:nopie - Disable PIE support (NOT FOR GENERAL USE)
cross-armv7a-softfloat-linux-gnueabi/gcc:nossp - Disable SSP support (NOT FOR GENERAL USE)
cross-armv7a-softfloat-linux-gnueabi/gcc:objc - Build support for the Objective C code language
cross-armv7a-softfloat-linux-gnueabi/gcc:objc++ - Build support for the Objective C++ language
cross-armv7a-softfloat-linux-gnueabi/gcc:objc-gc - Build support for the Objective C code language Garbage Collector
cross-armv7a-softfloat-linux-gnueabi/gcc:pgo - Build GCC using Profile Guided Optimization (PGO)
cross-armv7a-softfloat-linux-gnueabi/gcc:regression-test - Run the testsuite and install the results (requires FEATURES=test)
cross-armv7a-softfloat-linux-gnueabi/gcc:sanitize - Build support for various sanitizer functions (ASAN/TSAN/etc...)
cross-armv7a-softfloat-linux-gnueabi/gcc:ssp - Build packages with stack smashing protector on by default
cross-armv7a-softfloat-linux-gnueabi/gcc:systemtap - enable systemtap static probe points
cross-armv7a-softfloat-linux-gnueabi/gcc:vtv - Build support for virtual table verification (a C++ hardening feature)
cross-armv7a-softfloat-linux-gnueabi/gdb:client - Install the main "gdb" program (most people want this)
cross-armv7a-softfloat-linux-gnueabi/gdb:lzma - Support lzma compression in ELF debug info
cross-armv7a-softfloat-linux-gnueabi/gdb:multitarget - Support all known targets in one gdb binary
cross-armv7a-softfloat-linux-gnueabi/gdb:python - Enable support for the new internal scripting language, as well as extended pretty printers
cross-armv7a-softfloat-linux-gnueabi/gdb:server - Install the "gdbserver" program (useful for embedded/remote targets)
cross-armv7a-softfloat-linux-gnueabi/gdb:xml - Support parsing XML data files needed (at least) for cpu features, memory maps, and syscall tracing
cross-armv7a-softfloat-linux-gnueabi/glibc:cet - Enable Intel Control-flow Enforcement Technology (needs binutils 2.29 and gcc 8)
cross-armv7a-softfloat-linux-gnueabi/glibc:compile-locales - build *all* locales in src_install; this is generally meant for stage building only as it ignores /etc/locale.gen file and can be pretty slow
cross-armv7a-softfloat-linux-gnueabi/glibc:debug - When USE=hardened, allow fortify/stack violations to dump core (SIGABRT) and not kill self (SIGKILL)
cross-armv7a-softfloat-linux-gnueabi/glibc:gd - build memusage and memusagestat tools
cross-armv7a-softfloat-linux-gnueabi/glibc:multiarch - enable optimizations for multiple CPU architectures (detected at runtime)
cross-armv7a-softfloat-linux-gnueabi/glibc:nscd - Build, and enable support for, the Name Service Cache Daemon
cross-armv7a-softfloat-linux-gnueabi/glibc:rpc - Enable obsolete RPC/NIS layers
cross-armv7a-softfloat-linux-gnueabi/glibc:suid - Make internal pt_chown helper setuid -- not needed if using Linux and have /dev/pts mounted with gid=5
cross-armv7a-softfloat-linux-gnueabi/glibc:systemtap - enable systemtap static probe points
cross-armv8a-hardfloat-linux-gnueabi/binutils:default-gold - Set ld to point to ld.gold instead of ld.bfd
cross-armv8a-hardfloat-linux-gnueabi/binutils:gold - Build ld.gold linker
cross-armv8a-hardfloat-linux-gnueabi/binutils:multitarget - Adds support to binutils for cross compiling (does not work with gas)
cross-armv8a-hardfloat-linux-gnueabi/binutils:plugins - Enable plugin support in tools
cross-armv8a-hardfloat-linux-gnueabi/gcc:awt - Useful only when building GCJ, this enables Abstract Window Toolkit (AWT) peer support on top of GTK+
cross-armv8a-hardfloat-linux-gnueabi/gcc:boundschecking - Add the bounds checking patch by Haj Ten Brugge, this will DISABLE the hardened PIE+SSP patches
cross-armv8a-hardfloat-linux-gnueabi/gcc:cilk - Support the Cilk Plus language (C/C++ based languages for parallel programming)
cross-armv8a-hardfloat-linux-gnueabi/gcc:d - Enable support for the D programming language
cross-armv8a-hardfloat-linux-gnueabi/gcc:fixed-point - Enable fixed-point arithmetic support for MIPS targets in gcc (Warning: significantly increases compile time!)
cross-armv8a-hardfloat-linux-gnueabi/gcc:go - Build the GCC Go language frontend.
cross-armv8a-hardfloat-linux-gnueabi/gcc:graphite - Add support for the framework for loop optimizations based on a polyhedral intermediate representation
cross-armv8a-hardfloat-linux-gnueabi/gcc:jit - Enable libgccjit so other applications can embed gcc for Just-In-Time compilation. This will slow down the compiler a bit as it forces all of the toolchain to be shared libs.
cross-armv8a-hardfloat-linux-gnueabi/gcc:libssp - Build SSP support into a dedicated library rather than use the code in the C library (DO NOT ENABLE THIS IF YOU DON'T KNOW WHAT IT DOES)
cross-armv8a-hardfloat-linux-gnueabi/gcc:mpx - Enable support for Intel Memory Protection Extensions (MPX)
cross-armv8a-hardfloat-linux-gnueabi/gcc:mudflap - Add support for mudflap, a pointer use checking library
cross-armv8a-hardfloat-linux-gnueabi/gcc:nopie - Disable PIE support (NOT FOR GENERAL USE)
cross-armv8a-hardfloat-linux-gnueabi/gcc:nossp - Disable SSP support (NOT FOR GENERAL USE)
cross-armv8a-hardfloat-linux-gnueabi/gcc:objc - Build support for the Objective C code language
cross-armv8a-hardfloat-linux-gnueabi/gcc:objc++ - Build support for the Objective C++ language
cross-armv8a-hardfloat-linux-gnueabi/gcc:objc-gc - Build support for the Objective C code language Garbage Collector
cross-armv8a-hardfloat-linux-gnueabi/gcc:pgo - Build GCC using Profile Guided Optimization (PGO)
cross-armv8a-hardfloat-linux-gnueabi/gcc:regression-test - Run the testsuite and install the results (requires FEATURES=test)
cross-armv8a-hardfloat-linux-gnueabi/gcc:sanitize - Build support for various sanitizer functions (ASAN/TSAN/etc...)
cross-armv8a-hardfloat-linux-gnueabi/gcc:ssp - Build packages with stack smashing protector on by default
cross-armv8a-hardfloat-linux-gnueabi/gcc:systemtap - enable systemtap static probe points
cross-armv8a-hardfloat-linux-gnueabi/gcc:vtv - Build support for virtual table verification (a C++ hardening feature)
cross-armv8a-hardfloat-linux-gnueabi/gdb:client - Install the main "gdb" program (most people want this)
cross-armv8a-hardfloat-linux-gnueabi/gdb:lzma - Support lzma compression in ELF debug info
cross-armv8a-hardfloat-linux-gnueabi/gdb:multitarget - Support all known targets in one gdb binary
cross-armv8a-hardfloat-linux-gnueabi/gdb:python - Enable support for the new internal scripting language, as well as extended pretty printers
cross-armv8a-hardfloat-linux-gnueabi/gdb:server - Install the "gdbserver" program (useful for embedded/remote targets)
cross-armv8a-hardfloat-linux-gnueabi/gdb:xml - Support parsing XML data files needed (at least) for cpu features, memory maps, and syscall tracing
cross-armv8a-hardfloat-linux-gnueabi/glibc:cet - Enable Intel Control-flow Enforcement Technology (needs binutils 2.29 and gcc 8)
cross-armv8a-hardfloat-linux-gnueabi/glibc:compile-locales - build *all* locales in src_install; this is generally meant for stage building only as it ignores /etc/locale.gen file and can be pretty slow
cross-armv8a-hardfloat-linux-gnueabi/glibc:debug - When USE=hardened, allow fortify/stack violations to dump core (SIGABRT) and not kill self (SIGKILL)
cross-armv8a-hardfloat-linux-gnueabi/glibc:gd - build memusage and memusagestat tools
cross-armv8a-hardfloat-linux-gnueabi/glibc:multiarch - enable optimizations for multiple CPU architectures (detected at runtime)
cross-armv8a-hardfloat-linux-gnueabi/glibc:nscd - Build, and enable support for, the Name Service Cache Daemon
cross-armv8a-hardfloat-linux-gnueabi/glibc:rpc - Enable obsolete RPC/NIS layers
cross-armv8a-hardfloat-linux-gnueabi/glibc:suid - Make internal pt_chown helper setuid -- not needed if using Linux and have /dev/pts mounted with gid=5
cross-armv8a-hardfloat-linux-gnueabi/glibc:systemtap - enable systemtap static probe points
cross-avr/binutils:default-gold - Set ld to point to ld.gold instead of ld.bfd
cross-avr/binutils:gold - Build ld.gold linker
cross-avr/binutils:multitarget - Adds support to binutils for cross compiling (does not work with gas)
cross-avr/binutils:plugins - Enable plugin support in tools
cross-avr/gcc:awt - Useful only when building GCJ, this enables Abstract Window Toolkit (AWT) peer support on top of GTK+
cross-avr/gcc:boundschecking - Add the bounds checking patch by Haj Ten Brugge, this will DISABLE the hardened PIE+SSP patches
cross-avr/gcc:cilk - Support the Cilk Plus language (C/C++ based languages for parallel programming)
cross-avr/gcc:d - Enable support for the D programming language
cross-avr/gcc:fixed-point - Enable fixed-point arithmetic support for MIPS targets in gcc (Warning: significantly increases compile time!)
cross-avr/gcc:go - Build the GCC Go language frontend.
cross-avr/gcc:graphite - Add support for the framework for loop optimizations based on a polyhedral intermediate representation
cross-avr/gcc:jit - Enable libgccjit so other applications can embed gcc for Just-In-Time compilation. This will slow down the compiler a bit as it forces all of the toolchain to be shared libs.
cross-avr/gcc:libssp - Build SSP support into a dedicated library rather than use the code in the C library (DO NOT ENABLE THIS IF YOU DON'T KNOW WHAT IT DOES)
cross-avr/gcc:mpx - Enable support for Intel Memory Protection Extensions (MPX)
cross-avr/gcc:mudflap - Add support for mudflap, a pointer use checking library
cross-avr/gcc:nopie - Disable PIE support (NOT FOR GENERAL USE)
cross-avr/gcc:nossp - Disable SSP support (NOT FOR GENERAL USE)
cross-avr/gcc:objc - Build support for the Objective C code language
cross-avr/gcc:objc++ - Build support for the Objective C++ language
cross-avr/gcc:objc-gc - Build support for the Objective C code language Garbage Collector
cross-avr/gcc:pgo - Build GCC using Profile Guided Optimization (PGO)
cross-avr/gcc:regression-test - Run the testsuite and install the results (requires FEATURES=test)
cross-avr/gcc:sanitize - Build support for various sanitizer functions (ASAN/TSAN/etc...)
cross-avr/gcc:ssp - Build packages with stack smashing protector on by default
cross-avr/gcc:systemtap - enable systemtap static probe points
cross-avr/gcc:vtv - Build support for virtual table verification (a C++ hardening feature)
cross-avr/gdb:client - Install the main "gdb" program (most people want this)
cross-avr/gdb:lzma - Support lzma compression in ELF debug info
cross-avr/gdb:multitarget - Support all known targets in one gdb binary
cross-avr/gdb:python - Enable support for the new internal scripting language, as well as extended pretty printers
cross-avr/gdb:server - Install the "gdbserver" program (useful for embedded/remote targets)
cross-avr/gdb:xml - Support parsing XML data files needed (at least) for cpu features, memory maps, and syscall tracing
