# This file is deprecated as per GLEP 56 in favor of metadata.xml.
# Please add your descriptions to your package's metadata.xml ONLY.
# * generated automatically using pmaint *

cross-avr/binutils:multitarget - Adds support to binutils for cross compiling (does not work with gas)
cross-avr/gcc:awt - Useful only when building GCJ, this enables Abstract Window Toolkit (AWT) peer support on top of GTK+
cross-avr/gcc:boundschecking - Add the bounds checking patch by Haj Ten Brugge, this will DISABLE the hardened PIE+SSP patches
cross-avr/gcc:cilk - Support the Cilk Plus language (C/C++ based languages for parallel programming)
cross-avr/gcc:d - Enable support for the D programming language
cross-avr/gcc:fixed-point - Enable fixed-point arithmetic support for MIPS targets in gcc (Warning: significantly increases compile time!)
cross-avr/gcc:go - Build the GCC Go language frontend.
cross-avr/gcc:graphite - Add support for the framework for loop optimizations based on a polyhedral intermediate representation
cross-avr/gcc:jit - Enable libgccjit so other applications can embed gcc for Just-In-Time compilation. This will slow down the compiler a bit as it forces all of the toolchain to be shared libs.
cross-avr/gcc:libssp - Build SSP support into a dedicated library rather than use the code in the C library (DO NOT ENABLE THIS IF YOU DON'T KNOW WHAT IT DOES)
cross-avr/gcc:mpx - Enable support for Intel Memory Protection Extensions (MPX)
cross-avr/gcc:mudflap - Add support for mudflap, a pointer use checking library
cross-avr/gcc:nopie - Disable PIE support (NOT FOR GENERAL USE)
cross-avr/gcc:nossp - Disable SSP support (NOT FOR GENERAL USE)
cross-avr/gcc:objc - Build support for the Objective C code language
cross-avr/gcc:objc++ - Build support for the Objective C++ language
cross-avr/gcc:objc-gc - Build support for the Objective C code language Garbage Collector
cross-avr/gcc:pgo - Build GCC using Profile Guided Optimization (PGO)
cross-avr/gcc:regression-test - Run the testsuite and install the results (requires FEATURES=test)
cross-avr/gcc:sanitize - Build support for various sanitizer functions (ASAN/TSAN/etc...)
cross-avr/gcc:ssp - Build packages with stack smashing protector on by default
cross-avr/gcc:systemtap - enable systemtap static probe points
cross-avr/gcc:vtv - Build support for virtual table verification (a C++ hardening feature)
cross-avr/gdb:client - Install the main "gdb" program (most people want this)
cross-avr/gdb:lzma - Support lzma compression in ELF debug info
cross-avr/gdb:multitarget - Support all known targets in one gdb binary
cross-avr/gdb:python - Enable support for the new internal scripting language, as well as extended pretty printers
cross-avr/gdb:server - Install the "gdbserver" program (useful for embedded/remote targets)
cross-avr/gdb:xml - Support parsing XML data files needed (at least) for cpu features, memory maps, and syscall tracing
